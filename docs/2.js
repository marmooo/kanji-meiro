const remSize = parseInt(getComputedStyle(document.documentElement).fontSize);
const tmpCanvas = document.createElement('canvas');
// 何でも繋がってしまう漢字は意図的に削除 (一二三四五六七八九十百千上下左右)
// const s1a = Array.from('一右雨円王音下火花貝学気九休玉金空月犬見五口校左三山子四糸字耳七車手十出女小上森人水正生青夕石赤千川先早草足村大男竹中虫町天田土二日入年白八百文木本名目立力林六');
const w1_ = Array.from('雨円王音火花貝学気休玉金空月犬見口校山子糸字耳車手出女小森人水正生青夕石赤川先早草足村大男竹中虫町天田土日入年白文木本名目立力林');
const w2_ = Array.from('引羽雲園遠何科夏家歌画回会海絵外角楽活間丸岩顔汽記帰弓牛魚京強教近兄形計元言原戸古午後語工公広交光考行高黄合谷国黒今才細作算止市矢姉思紙寺自時室社弱首秋週春書少場色食心新親図数西声星晴切雪船線前組走多太体台地池知茶昼長鳥朝直通弟店点電刀冬当東答頭同道読内南肉馬売買麦半番父風分聞米歩母方北毎妹万明鳴毛門夜野友用曜来里理話');
const w3_ = Array.from('悪安暗医委意育員院飲運泳駅央横屋温化荷界開階寒感漢館岸起期客究急級宮球去橋業曲局銀区苦具君係軽血決研県庫湖向幸港号根祭皿仕死使始指歯詩次事持式実写者主守取酒受州拾終習集住重宿所暑助昭消商章勝乗植申身神真深進世整昔全相送想息速族他打対待代第題炭短談着注柱丁帳調追定庭笛鉄転都度投豆島湯登等動童農波配倍箱畑発反坂板皮悲美鼻筆氷表秒病品負部服福物平返勉放味命面問役薬由油有遊予羊洋葉陽様落流旅両緑礼列練路和');
const w4_ = Array.from('愛案以衣位茨印英栄媛塩岡億加果貨課芽賀改械害街各覚潟完官管関観願岐希季旗器機議求泣給挙漁共協鏡競極熊訓軍郡群径景芸欠結建健験固功好香候康佐差菜最埼材崎昨札刷察参産散残氏司試児治滋辞鹿失借種周祝順初松笑唱焼照城縄臣信井成省清静席積折節説浅戦選然争倉巣束側続卒孫帯隊達単置仲沖兆低底的典伝徒努灯働特徳栃奈梨熱念敗梅博阪飯飛必票標不夫付府阜富副兵別辺変便包法望牧末満未民無約勇要養浴利陸良料量輪類令冷例連老労録');
const w5_ = Array.from('圧囲移因永営衛易益液演応往桜可仮価河過快解格確額刊幹慣眼紀基寄規喜技義逆久旧救居許境均禁句型経潔件険検限現減故個護効厚耕航鉱構興講告混査再災妻採際在財罪殺雑酸賛士支史志枝師資飼示似識質舎謝授修述術準序招証象賞条状常情織職制性政勢精製税責績接設絶祖素総造像増則測属率損貸態団断築貯張停提程適統堂銅導得毒独任燃能破犯判版比肥非費備評貧布婦武復複仏粉編弁保墓報豊防貿暴脈務夢迷綿輸余容略留領歴');
const w6_ = Array.from('胃異遺域宇映延沿恩我灰拡革閣割株干巻看簡危机揮貴疑吸供胸郷勤筋系敬警劇激穴券絹権憲源厳己呼誤后孝皇紅降鋼刻穀骨困砂座済裁策冊蚕至私姿視詞誌磁射捨尺若樹収宗就衆従縦縮熟純処署諸除承将傷障蒸針仁垂推寸盛聖誠舌宣専泉洗染銭善奏窓創装層操蔵臓存尊退宅担探誕段暖値宙忠著庁頂腸潮賃痛敵展討党糖届難乳認納脳派拝背肺俳班晩否批秘俵腹奮並陛閉片補暮宝訪亡忘棒枚幕密盟模訳郵優預幼欲翌乱卵覧裏律臨朗論');
// https://okjiten.jp/7-tyuugakuseikanji.html
// 漢検4級
const w7_ = Array.from('握扱依威偉為違緯維壱芋隠陰鋭影越援縁煙鉛汚押奥憶菓箇暇雅介壊戒皆較獲刈甘監汗歓勧乾鑑環含奇鬼祈輝幾儀戯詰脚却丘及朽拠巨距御驚凶恐響叫狭狂況仰駆屈掘繰傾恵迎撃肩堅遣兼軒圏剣玄誇鼓枯継互更荒抗攻稿香恒項豪込婚鎖歳彩載剤咲惨雌伺紫刺脂旨執芝煮斜釈寂狩朱趣需秀舟襲柔獣瞬巡旬盾紹召沼詳床称畳丈飾殖触浸震慎侵寝振薪陣尽尋吹是征姓井跡扇占鮮訴燥騒僧贈即俗耐替拓沢濁脱丹端嘆淡弾恥遅致蓄沖跳徴澄珍沈抵堤摘滴添殿途吐渡奴怒透唐桃盗塔到倒逃踏稲闘胴峠突鈍曇弐悩濃輩杯泊拍迫薄爆髪抜罰繁販搬範般盤被疲彼避尾微匹描浜敏怖膚浮腐敷普賦舞幅払噴柄壁捕舗峰抱砲肪坊忙冒傍帽凡盆漫慢妙眠矛霧娘茂網猛黙紋踊雄与誉腰溶躍謡翼雷頼絡欄離粒慮療隣涙隷麗齢暦劣烈恋露郎惑腕');
// 漢検3級
const w8_ = Array.from('哀慰詠悦閲炎宴欧殴乙卸穏架佳華嫁餓怪悔塊概慨該穫隔郭岳掛滑勘肝貫敢緩冠換喚企軌棄棋忌既岐騎犠欺菊吉喫虐虚脅峡凝緊斤愚偶遇啓鶏携掲刑憩契鯨賢倹幻雇顧弧孤悟娯甲孔控拘郊硬綱巧坑慌絞酵克獄魂紺恨墾催債削錯搾撮擦暫施祉諮侍慈軸湿疾赦邪殊寿潤遵徐如晶掌鐘焦衝昇匠譲錠嬢冗嘱辱審伸辛粋炊遂衰穂酔随髄瀬牲婿請隻惜斥籍摂潜繕措阻粗礎双桑葬掃遭憎促賊逮胎怠滞袋滝託卓択諾奪胆鍛壇稚畜窒駐抽鋳彫超聴陳鎮墜訂帝締哲斗塗陶凍痘匿篤豚尿粘婆排陪縛伐帆伴藩畔蛮泌卑碑姫漂苗赴符封伏覆墳紛癖募慕簿崩芳胞縫倣邦飽奉妨乏謀膨房某墨没翻魔埋膜又魅滅免幽憂誘擁揚揺抑裸濫吏隆了猟陵糧厘零霊励裂錬廉炉漏廊浪楼湾');
const i1_ = '日本,入力,人気,本文,文字,学校,天気,大人,本日,本人,先生,人生,大学,入手,空気,学生,見学,左右,休日,上手,本気,先日,町名,入学,入金,中学,花見,下手,本年,女子,大手,花火,青空,出土,本音,出力,本名,月日,人目,文中,天空,下車,大目,赤字,大正,空白,男女,文学,小雨,上下,大雨,人文,水気,入口,人口,青森,本校,右手,男子,年月,手足,土日,左手,校正,土木,出先,雨天,子犬,下見,見本,夕日,中立,学力,先手,青年,女王,人出,大小,目玉,白日,中年,先見,人名,火山,手先,手中,足音,水中,大字,水木,木立,天下,年金,先月,本学,王子,中火,下水,小耳,手本,正気,中日,小人,林立,空手'.split(',');
const i2_ = '場合,自分,今日,出来,地図,時間,中心,大切,名前,今回,電話,先頭,今年,生活,回答,下記,当社,東京,会社,今後,中古,上記,土地,元気,日記,活用,明日,記入,楽天,人間,本当,気分,音楽,通知,当店,毎日,店名,社会,時計,計画,地元,家電,引用,中国,番組,計算,立場,当時,海外,会場,電車,時点,今週,中止,明記,点数,来店,見方,新聞,国内,友人,今月,高校,数字,正直,出前,多数,当日,地名,先週,出場,会話,来年,前日,本社,来場,書店,売買,半角,空間,電子,用語,交通,絵本,地点,入会,前回,手元,手紙,本書,分野,算出,本来,計上,科学,教室,社長,出店,通用,毎年,細心,午後,王国,市長,親切,夕方,音声,店内,新年,大会,公園,東海,市場,電気,手間,半分,多大,当地,店頭,原作,気合,台風,東北,帰国,間近,広場,日曜,工場,昼食,朝食,前後,同社,作用,少年,店長,今朝,目前,土曜,大半,時空,正当,夕食,自社,同行,合間,会長,地方,内科,原点,曜日,人数,文書,後半,米国,夜中,入社,教会,地上,先行,多少,近年,多用,自立,科目,日当,少女,明言,親子,来週,行方,岩手,直前,合計,青春,読書,正体,多分,入場,古書,毎週,外科,足元,直近,切手,自生,言語,半年,新車,町長,大地,今夜,名言,明白,広大,大分,体力,当分,中間,社寺,通学,生計,回数,天国,日数,強力,休止,右記,同一,天才,赤毛,人形,同店,星空,出番,国家,絵画,走行,新作,姉妹,作家,来日,国語,原文,小麦,立地,遠方,会計,体内,角川,社名,公言,心理,国会,羽目,公立,水曜,弟子,生地,当方,週間,長年,父親,週休,高台,自体,金色,左記,気長,目線,見当,強行,会見,上場,門地,午前,同時,東西,名店,土台,国立,水分,社外,会合,声明,新書,大声,図書,本家,算入,高知,小売,合体,番地,親交,入室,角地,学会,同点,母親,日時,外交,家中,学科,活気,自作,長文,後日,毎月,前記,人体,思考,手前,北東,来月,売上,原理,月曜,作文,林道,社内,本場,本体,黄色,金曜,晴天,外国,地理,上京,書名,顔色,手話,台頭,本紙,道場,土用,台場,何時,知人,長男,気楽,合算,外見,用紙,直後,公明,歌声,白黒,前半,母体,白羽,早朝,小社,本番,上海,活力,同名,家計,本店,通園,市内,母校,弱火,前年,昼夜,名作,北上,夜空,算数,点心,下図,矢先,兄弟,日光,毎回,室内,数学,寺社,音読,黒人,理科,園内,回線,自明,親友,近道,地形,風水,毎朝,手当,直行,本市,公正,地下,食後,外出,同人,中秋,力点,海上,耳元,小鳥,北国,電力,地道,北米,行内,方言,入用,元町,用心,電池,月間,風土,心地,同紙,毛頭,入門,水道,女心,南東,南下,正午,原本,地番,出船,元本,通話,通行,目頭,組立,半生,太古,空色,南西,白馬,赤色,人前,本会,元来,組合,口元,言明,前作,合図,行頭,大体,里山,新子,新米,売店,同日,歌手,後場,出走,後手,強風,外食,外来,音色,声高,白紙,大方,下線,黄金,内外,音頭,北西'.split(',');
const i3_ = '記事,商品,使用,写真,問題,意見,意味,期待,仕事,注文,指定,言葉,住所,用意,発表,気軽,発生,注目,世界,全国,安心,病院,相談,公開,話題,会員,注意,部屋,予定,発見,仕方,心配,作品,勉強,開発,動画,大事,感想,開始,場所,活動,決定,登場,旅行,様子,理由,発売,発送,予想,返品,新着,時代,同意,部分,相手,自由,向上,読者,事前,放送,家族,感動,食事,安全,文章,研究,発行,有名,時期,事実,自身,練習,用品,旅館,実感,全部,京都,近所,都合,路線,画面,集中,返事,実行,次回,行動,発言,教育,勝手,全体,食品,苦手,調子,病気,医院,強調,地球,強化,新宿,安定,想定,礼金,調整,学問,出荷,整理,公表,代表,表明,同様,相当,駅名,反対,人物,家庭,他人,学習,歯科,医者,感心,配送,出品,作業,公式,出発,上部,運転,事業,図表,取引,理想,表記,目安,身体,去年,意外,今度,太陽,休業,外部,入荷,文化,交流,自動,発明,由来,所有,悪化,全文,期間,身近,面白,予感,体調,入院,銀行,運用,目次,予算,定着,追記,進行,中身,相場,平和,決意,動作,美人,業界,進化,次第,短期,見事,神社,手帳,物語,方向,形式,小物,世話,実家,運行,直面,投入,重点,活発,主体,文具,作者,起算,配合,和食,主流,空港,開放,意向,進学,転用,全力,発足,何事,買取,合意,進出,定番,着物,生息,動物,荷物,工具,漢字,高速,薬局,生命,集計,手配,起動,工事,文庫,家具,開業,定員,飲食,平日,気配,回転,仕様,体感,運命,屋根,区分,真実,意図,番号,医学,命名,息子,転送,行使,意思,場面,何者,所持,服用,正式,悲鳴,買物,着用,合流,着手,本屋,流行,商談,昭和,実物,実力,動向,代金,手軽,名所,館内,早速,気温,勝負,前面,部員,全角,客室,自負,業者,和書,運動,返金,平気,天使,電化,多発,急速,用事,調和,事由,流通,指名,新品,重大,中央,表紙,広島,味方,親身,具合,起用,都内,道路,世代,野球,毎度,県内,返答,短大,多様,問屋,内定,両立,行列,列車,記号,放出,役目,悪口,都市,算定,世間,全員,物流,発想,代行,開花,発動,書式,着目,植物,年配,楽曲,両手,行事,鉄道,思想,頭皮,決勝,登山,神様,風味,心身,発注,幸福,所定,開通,真夏,直送,道具,出題,様相,下落,整体,追放,終始,流出,分身,高度,本物,対立,王様,役員,定食,作曲,集合,図面,主役,委員,部落,死去,正面,近代,帰路,横目,進歩,都会,調理,身長,整形,進路,学者,受理,高級,決心,死者,乗車,首相,同等,起点,両方,投下,深夜,社員,反発,主人,題名,使命,長期,後者,店員,表面,角度,農業,作動,寺院,農家,着実,記者,和風,横行,紙面,陽気,来院,毛皮,暑中,来館,洋食,飲酒,商売,人事,全身,会談,真相,負荷,古代,白銀,方式,時事,書面,主題,両親,血行,洋服,虫歯,助長,仕業,旅先,運送,院内,女神,皮肉,体重,幸運,電波,後世,流用,出身,定年,集客,地面,決着,大豆,和洋,物事,新緑,切開,身軽,有用,神話,決算,生業,花屋,家主,他社,注力,美味,申出,近鉄,悪用,起業,全集,転落,流石,洋画,学区,他者,口調,注入,物心,死体,当館,地酒,水着,足湯,神道,女医,生育,転校,本業,動員,農薬,名物,全面,都心,登記,直感,意地,住人,出庫,物色,取消,洋楽,島根,放流,入所,通院,部活,発音,曲名,早急,助言,開店,感化,部門,知事,温度,生物,本題,有力,全開,店主,車両,天神,地区,坂道,年表,消化,病名,打開,受取,北部,平行,前進,下着,放題,学部,子宮,都度,筆者,真心,物理,長所,前者,想起,代用,上品,対決,駅前,落下,部品,開運,洋書,通路,家事,両者,消去,教員,丁目,等級,会館,式場,火事,開局,反転,旅宿,出動,台所,流入,本館,酒屋,転売,下部,悪意,前身,対話,住戸,全品,同期,対談,開館,部下,商業,宿場,体育,福屋,同乗,実用,起立,名曲,化学,受注,本州,内部,見物,前世,予期,空想,中部,予言,対面,取組,細部,様式,東急,集会,命中,開会,発育,年代,院長,決行,感服,上表,有事,当面,美女,意表,他界,親指,漢方,新調,身分,大根,家屋,年号,商用,合宿,何様,名医,列島,交代,風化,宿題,商社,転向,宿命,全米,祭事,事後,軽食,返送,対等,主食,配当,感知,早期,後味,東部,重箱,赤鼻,年度,詩人,筆頭,次号,主力,後進,高配,実話,入歯,多幸,速度,転入,小屋,消息,反日,集落,面談,開校,市区,悪者,始発,和室,気持,交配,区間,直進,氷山,新橋,言動,薬事,売主,本意,口実,学院,和式,石油,先決,炭火,同調,代物,反感,本部,下表,所見,苦言,開場,進入,下味,近世,前期,市部,命運,指数,路上,高温,配列,乗船,流星,直筆,登校,心血,上流,鉄板,地味,童話,風習,答申,読物,着服,方面,発電,悪寒,上着,鳥取,湯水,死後,悪気,理事,始動,次男,行者,化石,酒場,屋号,全戸,公平,屋外'.split(',');
const i4_ = '必要,利用,登録,最近,参加,以下,関連,最新,無料,参考,希望,追加,説明,目的,作成,周辺,予約,関係,友達,大変,求人,結果,送信,案内,重要,協力,健康,最後,無理,以上,昨日,最初,残念,方法,便利,機会,成功,送料,料理,変化,当然,自然,体験,投票,参照,観光,完成,特集,失敗,位置,管理,返信,形成,満足,料金,要望,季節,記録,成長,自信,努力,配信,特定,失礼,受付,大阪,不安,約束,以前,印刷,種類,英語,成立,達成,不明,要求,以外,改正,馬鹿,目標,最高,関心,試合,沖縄,法人,発信,関東,課題,分類,未来,区別,共通,共有,出席,低下,小説,配置,取材,放置,記念,最大,苦労,各種,笑顔,完全,観察,工夫,受信,不足,氏名,生産,昨年,育成,固定,辞書,公共,教養,卒業,健全,祝日,交付,土産,追求,加工,関西,老人,市民,建物,食材,必死,加入,国民,送付,散歩,無事,有無,法令,勝利,連想,結局,加算,成果,不要,結成,倉庫,何卒,主要,愛用,反省,特別,特典,入札,信用,勇気,題材,連動,感覚,会議,戦争,出産,単語,業種,通信,機器,選出,自覚,野菜,育児,事例,連続,受験,各社,完売,発達,持参,生成,飲料,建立,加筆,風景,変動,冷静,香水,生徒,選手,配達,梅雨,順調,大量,順位,商標,日付,埼玉,原料,選定,祝福,出典,材料,伝説,観点,最悪,有料,人材,明治,発覚,議長,景色,協議,徒然,例外,当選,徒歩,不満,北陸,順番,外観,光景,満開,愛知,選挙,加速,変身,省令,阪神,好感,安置,児童,共感,地位,面積,兵庫,焼肉,付着,最強,対戦,滋賀,天候,周知,最長,実験,赤旗,念頭,初期,改良,考案,待機,満面,週末,節約,書類,調節,見積,集約,手順,達人,有利,録画,標高,静岡,各地,不幸,夜景,命令,録音,照合,平成,未然,落札,良好,全然,帰省,信号,付加,試験,苦笑,最低,借金,苦戦,新潟,観戦,最中,不正,楽器,議決,不便,産業,差別,特筆,園芸,信州,当初,特色,成分,付近,民宿,機種,完結,民主,改変,記法,訓練,単発,岐阜,強要,手法,連結,考察,未定,連発,続出,利点,味覚,戦後,単位,分散,持続,愛犬,直結,照会,上位,根底,浴衣,訓令,産地,大別,欠落,熱心,参戦,年末,連休,養成,関節,理念,議題,共同,数量,多岐,機械,愛車,助成,住民,事典,成約,例年,最短,愛読,待望,合成,愛媛,自民,戦場,残業,極上,極意,香港,散見,調達,浴室,標的,養子,右側,矢印,集結,結合,試算,原案,栄養,分岐,要約,佐賀,各国,発令,上司,徳島,各課,以内,上陸,通貨,改定,終結,鳥類,議会,決議,手続,信長,熱中,給料,連行,以来,土佐,勇者,左側,協会,相続,議員,人種,民族,原付,群生,競売,右折,側面,必見,好意,社説,日産,改行,左折,欠点,不服,改名,労働,内包,博多,各自,県民,栃木,観客,列挙,松竹,初日,指標,連日,日課,英国,課金,初回,種別,部類,加味,競争,点灯,特選,交差,満天,無線,工芸,良品,未知,司会,好調,特長,信念,初音,月別,山積,小児,結集,不利,参画,金利,給食,気候,外灯,安静,人類,群馬,別人,不当,人達,辞典,便乗,究極,景観,参入,察知,機関,同席,単品,成人,調印,不動,世辞,消失,軍配,残暑,酒類,借入,最速,用法,初夏,景気,底本,食器,本案,共生,照明,以後,目印,満席,借家,入浴,挙行,茨城,改札,各週,初心,健勝,思案,各店,続行,各氏,部位,好天,失望,始末,受給,大差,法事,節目,自愛,包丁,平然,産学,参列,最終,副業,変形,品種,天井,内側,昨夜,借主,伝達,近辺,失念,戦国,集積,道順,教材,民間,清栄,発散,国産,的中,不覚,挙式,焼失,戦死,子孫,産物,無茶,神官,北側,取付,競馬,教訓,議事,試読,力説,熱意,投信,文芸,天然,上達,標語,水辺,用量,山梨,所要,老後,願書,年季,念願,満月,英和,栄光,愛想,切望,借地,愛着,別名,談笑,手札,無言,実例,帯広,最良,送達,学位,終戦,各界,車種,通例,未満,争点,折角,試食,物議,別物,食料,昨今,満室,無実,功名,変色,静止,戦前,事案,産科,飛来,未読,観念,熱気,野望,最小,街道,発案,合唱,西側,無数,共用,新卒,社民,給付,花束,整然,信徒,芸人,養育,印字,別送,時候,文例,強固,付帯,食塩,果物,用例,新種,熱海,南側,名残,機体,通関,熱戦,外側,結末,海辺,同然,連立,放牧,熱望,好物,節分,東側,古典,極道,不用,続発,多量,入試,加熱,愛飲,所管,付記,重量,便所,伝送,配付,量産,法的,夕飯,散会,試着,和英,落選,競合,全焼,配管,所以,画材,無知,反旗,香料,必読,協同,新法,不良,牧場,必然,不意,式典,手芸,時給,単身,予選,敗北,協定,不調,少量,残高,工法'.split(',');
const i5_ = '情報,表示,対応,画像,内容,質問,設定,現在,物件,理解,可能,条件,規定,興味,評価,広告,判断,報告,責任,機能,実際,実現,対象,状態,設置,非常,過去,運営,転職,編集,経験,移動,原因,保証,適用,感謝,有効,禁止,価格,取得,採用,表現,提出,女性,想像,帰属,在庫,提案,新築,効果,解決,豊富,構成,確保,保護,準備,個人,修正,導入,調査,歴史,整備,印象,直接,指導,意識,主張,無効,適切,美容,正確,解説,出演,新規,製造,許可,保管,設立,絶対,複数,増加,営業,資格,評判,複製,通報,独自,証明,制作,移転,報道,現状,確立,開設,明確,基本,構築,技術,損害,素材,建設,知識,支持,限定,資料,前提,格安,経過,事件,判明,受賞,減少,記述,提示,設計,条例,防止,基準,出版,設備,復活,反応,所属,総合,刊行,規則,原則,金額,職業,指示,医師,製品,接続,省略,政治,容易,経営,開示,公布,職種,回復,表情,解消,事情,結構,男性,得意,停止,合格,支配,過言,制限,現実,配布,識別,予告,利益,確信,再現,類似,授業,弁当,支給,無断,製作,個別,好評,実績,通常,確定,保有,修理,快適,最適,演出,移行,限界,政令,解放,何故,組織,速報,見解,事故,業務,投資,定義,夢中,検出,査定,講演,通過,再生,確実,文句,布団,再度,軽減,再開,規約,職員,費用,程度,出現,制定,予測,余談,準用,適当,検査,測定,基点,周囲,講師,現地,能力,加減,保険,貸家,重複,殺害,品質,現場,新刊,予防,事務,事態,統一,出張,正解,保持,大勢,芸能,統計,手術,採点,要素,検定,正常,経由,独立,任意,件数,中断,付属,復元,検証,素直,新設,新型,適正,職場,日刊,日常,建築,適合,余計,相性,解明,雑貨,基調,特性,定評,常識,団体,現代,可決,受講,招待,真似,義務,前述,性格,実態,完備,不快,輸入,特設,日程,墓地,任命,構造,混雑,賛成,統合,提起,習得,観測,公演,国際,職務,破損,起因,急増,格好,眼科,複雑,告白,性別,余地,伝統,答弁,自殺,態度,仮定,飼育,制服,税金,現金,応用,版元,的確,制度,総務,点在,判決,規制,修行,断念,提唱,判定,意義,消費,移住,絶賛,研修,賛同,伝授,個室,政府,寄付,明示,防犯,入居,同居,告知,配属,個性,強制,行政,留学,救急,週刊,分解,職歴,要件,特価,性質,再建,精通,要因,増大,永遠,本質,業績,効力,油断,絶大,標準,国境,混在,改造,規程,居住,田舎,復帰,再会,断言,故意,証言,予報,上演,実情,講義,財布,主婦,高額,上限,選任,下限,体制,分布,損失,素人,解散,備考,謝罪,断然,成績,貯金,清潔,暗殺,精神,前条,食堂,武器,独断,実在,無限,正義,才能,実証,面接,不可,図版,不備,留意,感情,自在,習慣,多額,得体,愛情,大型,有益,圧力,逆転,率直,限度,広報,案件,挙句,混同,課税,博士,複写,切断,効能,芸術,独特,低迷,出資,可愛,接近,解体,物質,神経,犯罪,資金,開講,集団,保全,停車,総会,採取,財産,現象,輸出,提言,編成,情熱,適応,配備,過失,編入,増進,資産,迷子,意志,説得,分断,格別,所在,容量,境内,風情,共演,接客,建造,移植,委任,原告,運勢,低減,打破,法規,墓石,主眼,混入,許容,血液,現役,往復,決断,教授,上質,功績,評点,発刊,採決,形状,計測,作製,救出,経路,断定,適法,暗示,演技,書評,性能,形態,教師,天災,任期,定率,防災,夢見,総額,本件,移築,雑談,支店,賞品,法則,保守,過程,告示,復刊,標識,絶品,比例,主演,初版,定額,反逆,支出,実費,資本,体質,精進,絶景,災害,支度,入賞,停電,仮面,急務,眼鏡,容器,制約,留守,上述,保健,志望,確約,苦情,指圧,夫婦,解禁,絶望,余念,在住,倍率,特許,立証,燃油,総力,幹事,測位,責務,絶版,朝刊,半減,先制,戦略,期限,逆手,交際,人質,平均,病状,減額,暴行,効率,常備,素顔,件名,犯人,航空,業態,仏教,健在,修復,移設,損保,適度,移管,告発,判別,包囲,招集,通告,倍増,歴任,財務,夕刊,月刊,境界,点検,余分,時価,修得,経年,絶句,火災,真価,演歌,人妻,辞任,代弁,賞賛,運輸,不在,過度,主導,絶好,後述,解任,平素,武士,申告,体現,所得,防衛,経歴,対比,職人,移送,受領,保育,判然,同情,車検,寄生,復旧,復興,心得,営利,暴力,単独,半額,比重,横断,予断,貸切,志向,歴然,救助,賞味,接待,検挙,応対,造成,比率,快挙,領土,散在,官報,実務,水準,構想,公告,貧富,技能,中略,採集,属性,迷宮,歴代,保養,永久,名義,開演,制止,典型,河川,精度,初演,人格,友情,発現,確率,圧勝,信条,相応,照準,過料,要領,増量,図示,造営,常温,年額,迷路,美術,公示,散布,制圧,気象,講習,原型,殺人,改築,禁物,良質,気絶,師事,協賛,混合,改修,統治,運航,確固,酸味,質屋,県境,居城,月額,鉱物,演芸,快勝,犯行,燃焼,電報,神職,公務,無罪,仏具,解約,具備,流布,根幹,悪夢,正規,勢力,買得,総理,心境,教示,増設,暴走,留置,製薬,近接,和解,不測,防水,産経,逆行,防音,再発,無職,競技,興信,再任,仮説,工程,総研,差額,金賞,貸借,法務,雑然,冬型,製法,課程,検知,悪評,悪質,学費,市政,在学,感性,条文,定価,金属,判例,貸出,寄進,順序,有罪,常連,地価,経費,本格,快晴,財政,居候,増築,余程,手際,保留,粉末,資質,経理,続編,間接,大賞,精製,損金,音質,在職,築城,先述,任務,税率,健保,築造,先導,現行,型式,料率,眼下,銅像,修業,内在,例示,適量,間際'.split(',');
const i6_ = '確認,提供,賃貸,存在,地域,簡単,検討,子供,展開,承認,保存,映画,雑誌,反映,担当,拡大,展示,負担,認識,沿線,発展,解除,収録,疑問,改善,法律,発揮,否定,推進,著者,映像,困難,演劇,納得,素敵,無視,役割,誕生,温泉,批判,閉店,経済,訪問,拝見,認定,議論,死亡,厳選,収集,宅配,認証,優先,住宅,処理,対策,自宅,演奏,価値,背景,割引,重視,障害,承知,将来,専門,危険,権利,優勝,金券,洗練,貴重,誤解,異常,結論,値段,翌日,従事,対処,推測,就職,吸収,視線,視点,放映,視野,帰宅,勤務,混乱,看板,従前,宣言,方針,何処,株式,郵便,装備,感染,支障,従来,推定,就任,決済,加盟,講座,秘密,家賃,階段,操作,推移,宣伝,尊敬,処分,通勤,保障,供給,収納,専用,容疑,自己,危機,装着,策定,痛感,尊重,警察,背中,散策,手段,紅葉,歌詞,除去,声優,回収,存分,非難,模様,至高,創設,賃料,密接,窓口,専念,重宝,興奮,年収,届出,感激,処方,段階,補足,創造,割合,株価,差異,供述,姿勢,郵送,認可,異議,延期,貴方,子宝,密着,処置,出展,電源,同署,中傷,幼児,上映,証券,誤差,賃借,認知,候補,延長,敬意,若干,権限,質疑,忠実,内蔵,分割,規模,縮尺,厳密,除外,格納,宇宙,単純,収入,故障,無難,退会,納期,深刻,数値,納付,仏閣,敬老,衣装,洗脳,発射,著書,創建,食欲,急激,砂糖,反射,実装,縮小,激減,口座,現存,収容,推察,視察,補助,頂点,宣告,短縮,幼少,熟成,反論,引退,警告,源泉,視界,若者,所蔵,純金,担任,重傷,改装,買収,指揮,以降,株主,伝承,私的,退職,所存,包装,進展,貴社,山頂,存続,資源,至難,誠意,署名,討論,熟知,遺体,探求,根源,意欲,参拝,異動,否認,起源,冊子,展望,背後,宅地,作詞,故郷,開幕,社宅,敬遠,立派,並行,難点,盛大,銀座,割愛,格段,言論,理論,誤用,担保,毛穴,負傷,頭痛,除名,預入,創立,散乱,就活,論文,返済,脳裏,劇場,優良,政権,心臓,内装,宝庫,否決,筋肉,創出,射殺,常勤,時刻,圧巻,君臨,私事,軽視,異名,憲法,派手,厳重,密集,転勤,秘書,洗礼,裏側,天皇,退院,拡張,自我,容認,看護,圧縮,県警,同盟,呼応,生存,裏目,星座,納入,女優,政策,欲望,創刊,内訳,共存,収益,痛風,宗教,至福,注射,貴店,画策,寒暖,全巻,厳守,納品,後退,背筋,激化,刻印,服装,誤字,著作,小腹,幕末,改革,別段,宝石,難航,裁判,国宝,人権,補給,加担,出勤,創作,激動,善意,注視,銭湯,私立,枚挙,語源,片方,最善,熟練,収蔵,諸君,危害,段落,優勢,領域,区域,蒸発,軽傷,庁舎,可否,聖書,諸説,頂上,退治,仁義,推計,劇的,牛乳,厳正,異性,得策,結納,本誌,補強,連呼,異変,大腸,腹痛,決裁,拝読,俳優,貯蔵,私見,敗退,高値,骨折,直訳,呼吸,収得,創業,接骨,論外,難色,専任,派生,異論,連盟,温暖,授乳,拝借,誤記,評論,損傷,警備,個展,台詞,照射,視力,誠実,下段,県庁,樹立,傷害,来訪,部署,中腹,不敵,母乳,乱入,降順,厳禁,便秘,目視,辞退,諸悪,臓器,本展,階層,救済,縦覧,収拾,実権,必至,終値,席巻,探検,簡潔,補完,毎晩,供養,朗読,閉会,成熟,完済,安値,片手,蔵書,財源,権力,装置,論破,忠告,翌年,公衆,低層,革命,苦痛,激増,紅潮,直視,悲痛,自認,公認,遺志,劇団,高層,残存,皇室,指針,警報,乱立,理系,亡命,乳児,忠誠,閉口,割安,植樹,書簡,丸善,補佐,売値,波乱,内覧,巻末,著名,激痛,就航,紅茶,筆舌,納豆,買値,就業,俳句,源流,広域,本尊,模型,泉州,観覧,系列,敵対,段差,優位,満腹,存亡,密閉,亡国,女将,目処,死傷,遺伝,遺産,短冊,論理,割高,極論,異国,座席'.split(',');
const i7_ = '紹介,詳細,投稿,変更,販売,応援,記載,連絡,更新,影響,皆様,店舗,状況,指摘,記憶,活躍,宿泊,比較,項目,是非,特徴,迷惑,環境,普通,支援,結婚,到着,転載,維持,派遣,依頼,攻撃,医療,趣味,獲得,考慮,治療,違反,彼女,通販,敷金,税込,舞台,被害,行為,売却,相互,傾向,沢山,破壊,信頼,配慮,新鮮,大幅,事項,継続,面倒,介護,距離,言及,継承,恋愛,普及,範囲,添付,近隣,我慢,連載,年齢,前項,象徴,申込,真剣,刺激,別途,拠点,侵害,圧倒,歓迎,乾燥,解釈,回避,寄与,蓄積,多彩,名称,突入,微妙,瞬間,自慢,関与,突然,現況,普段,離島,趣旨,途中,用途,依存,目撃,満載,振込,駆使,閉鎖,隣接,付与,地震,到達,浸透,基盤,対抗,経緯,知恵,執筆,遠慮,先輩,恐縮,極端,突破,侵入,漫画,支払,駆除,給与,未婚,汚染,起訴,授与,根拠,監視,発掘,制御,浮上,空欄,市販,拍手,名誉,離婚,爆発,歳月,拍車,占領,凡例,抵抗,信仰,敏感,闘病,触発,不況,半端,接触,寝具,分離,搬送,相違,警戒,脱毛,殺到,優秀,玄関,威力,寄贈,迫力,慎重,圧迫,恋人,追及,尽力,引越,矛盾,投与,今更,途方,腰痛,露出,鮮明,皆無,端数,執行,雄大,含有,史跡,輩出,鑑賞,罰金,声援,禁煙,奇妙,抗議,徴収,絶妙,需要,総称,沈黙,外壁,舗装,返却,搬入,愛称,違法,彼氏,爆笑,帽子,尋常,恩恵,取扱,箇所,改称,全般,抵触,面影,獣医,振興,準拠,倒産,祈願,猛毒,到来,端的,趣向,襲撃,証拠,大粒,独占,奇跡,浮気,暴露,昼寝,承継,避難,却下,躍起,直撃,諸般,図鑑,本稿,大抵,合致,恐怖,冒頭,恒例,印鑑,援助,描写,健闘,匹敵,物販,添加,遺跡,送迎,釈然,贈答,捕獲,御覧,原爆,発端,御社,足跡,占拠,圏内,開拓,噴出,固執,敷地,踏襲,攻略,困惑,名刺,戦闘,外為,抜群,強烈,茶髪,為替,微動,機微,脱出,監査,祈念,東芝,釈放,依拠,格闘,漫才,初恋,脚光,生殖,繁殖,握手,奴隷,即日,称号,悲惨,闘争,舌鼓,巨人,勧告,珍重,端末,摘発,丈夫,抱負,露店,震源,専攻,薄毛,増殖,巡回,煙草,自称,実況,歳暮,奮闘,監禁,原稿,新婚,脂肪,鑑定,被告,形跡,盛況,感嘆,猛暑,突進,打撃,増幅,高齢,偉大,侵略,座敷,無縁,白髪,追跡,髪型,汚損,端午,静寂,次項,呼称,寄稿,仮称,壁紙,装飾,選抜,遅延,押収,逃走,皮膚,濃厚,希薄,投影,突出,執着,驚異,歓声,搬出,中堅,乾杯,劣化,繁栄,略称,脱却,停泊,中継,提訴,折込,左端,暗黙,芝居,運搬,堅調,理屈,芝生,苦慮,優雅,信越,仰天,冒険,出稿,歓喜,豪語,交互,苦悩,仲介,敷設,瞬時,被災,誇示,監修,豆腐,規範,侵攻,透明,忙殺,熱狂,人柄,更地,通称,反撃,太鼓,繁盛,介入,猛烈,魚介,激怒,侵食,征服,猛威,縁起,即時,完膚,鉛筆,養殖,多忙,本拠,本腰,老舗,撃破,浜松,奥様,御礼,追突,訴状,微笑,帰途,間髪,所為,堅持,寝息,脚本,息吹,感触,傷跡,脱線,思惑,貸与,執事,退屈,騒然,釈明,収載,是正,先端,温床,薬剤,惨殺,傾倒,彼岸,波紋,唐突,末尾,逆襲,脱字,寝言,終盤,介在,渡来,召集,過敏,刺身,斜面,湖沼,濃縮,贈与,処罰,振替,兼務,突撃,浮遊,身柄,奥深,押印,彼方,収監,兼任,痛烈,激突,甘味,肩身,防御,迫害,陰口,渡航,後輩,電撃,黙認,数奇,遅刻,露子,鼓動,荒波,儀式,床下,是認,右翼,紋章,暗躍,紫色,先陣,占有,荒野,復縁,振動,沈殿'.split(',');
const i8_ = '掲載,開催,選択,携帯,実施,削除,終了,該当,施設,募集,企業,撮影,閲覧,交換,逮捕,了承,邪魔,応募,魅力,施行,請求,書籍,企画,承諾,申請,完了,訂正,満喫,如何,契約,促進,連携,福祉,措置,犠牲,魅了,委託,覚悟,要請,風邪,上昇,匿名,基礎,勘弁,概要,後悔,緊張,焦点,霊園,変換,締結,遭遇,分譲,抽選,了解,掃除,葬儀,遂行,魔法,紛失,譲渡,衝撃,崩壊,採択,削減,抑制,審査,寿司,円滑,消滅,提携,怪我,抽出,遵守,排除,凝縮,掲示,滞在,収穫,放棄,阻止,視聴,愛顧,冗談,宴会,克服,拘束,在籍,免許,既婚,主催,魔女,募金,控除,喫茶,当該,緩和,封印,誘導,排出,偶然,奉納,翻訳,凍結,休憩,魔術,摂取,衰弱,転換,炎上,試聴,鎮座,施工,同封,阻害,解雇,滅多,液晶,錯覚,団塊,工房,肝心,殺伐,豪華,妨害,免除,北斗,処刑,突如,膨大,分泌,勧誘,地獄,勘案,華麗,哲学,雇用,没頭,容赦,審議,付随,許諾,悪魔,台湾,常駐,衝動,抜粋,仏壇,既存,駐車,擁護,邦楽,優遇,絶滅,修了,換算,昇順,販促,葬式,賢者,隔離,衝突,発酵,滅失,出没,緊急,鎮痛,脅迫,切符,紛争,概念,概算,欧米,棄却,邦画,契機,移籍,追随,欠如,赴任,免責,塗装,停滞,既出,埋葬,平穏,誘引,不審,随所,昇格,衰退,召喚,凝視,施策,清掃,誘発,虐待,度肝,食卓,誘惑,顧客,乙女,塗布,特撮,待遇,激励,遅滞,脅威,如実,虐殺,動揺,超越,酵素,壊滅,伐採,死刑,孤立,全滅,抑圧,陳列,軌道,破棄,警鐘,敢行,将棋,奉仕,卸売,娯楽,疾風,施術,中華,高揚,幽閉,花嫁,改訂,肝要,自炊,夢幻,催行,没収,滞納,要綱,双書,双子,封入,刑事,賢明,付託,常軌,石碑,撃墜,廊下,細胞,公募,随時,彫刻,負債,換金,交錯,緊密,減免,貫通,池袋,置換,粗末,架空,所掌,同伴,昇華,駐留,口癖,霊場,胎児,潜伏,社債,粘着,特殊,大胆,潜入,換言,喚起,豚肉,名簿,封鎖,湿気,点滅,寿命,滅亡,掌握,辛酸,冷凍,間隔,投獄,近郊,佳境,駐在,昇進,分裂,疾走,苗字,硬直,誤審,水没,締切,要衝,互換,埋没,欧州,喫緊,覆面,隔絶,栄冠,聴取,排水,控訴,北欧,傍聴,畜産,疾病,大概,南欧,全裸,受託,符号,債権,顧問,軌跡,卓越,乗換,火葬,満了,精霊,諮問,果敢,幻想,国籍,基軸,求刑,束縛,輪郭,胎教,失墜'.split(',');
const i9_ = '検索,購入,充実,挑戦,貢献,風呂,把握,綺麗,余裕,披露,弊社,堪能,診断,分析,挨拶,症状,購読,搭載,廃止,受診,駄目,丁寧,実践,無駄,患者,栽培,拒否,閑静,妊娠,冥福,懸念,銘柄,推奨,履歴,示唆,韓国,徹底,必須,併設,頂戴,賠償,解析,合併,迅速,彷彿,網羅,同僚,併用,融合,挿入,模索,妥当,曖昧,日頃,翻弄,監督,推薦,椅子,勿論,札幌,近畿,頻繁,贅沢,素朴,診療,麻痺,拉致,充分,唯一,返還,毀損,焼酎,愕然,撤去,表彰,診察,愉快,邸宅,伊豆,梱包,鍼灸,些細,喧嘩,虚偽,感銘,管轄,柔軟,顕著,詐欺,利尻,生涯,憂鬱,沸騰,交渉,嫌気,唖然,破綻,洗濯,誘拐,還元,廃車,呆然,捜査,真偽,長蛇,媒体,渋滞,書棚,発症,蕎麦,躊躇,金融,疾患,懐石,贈呈,漏洩,仙台,口臭,手頃,抜擢,閑散,暗闇,稽古,流暢,発祥,割烹,睡眠,酷似,完璧,肯定,見頃,探偵,毅然,藤子,秘訣,蔓延,今頃,訴訟,機嫌,過剰,混沌,撤退,充満,露呈,餃子,無償,微塵,眺望,変貌,醤油,頻発,矯正,内緒,対峙,標榜,定款,遮断,餌食,溜息,揶揄,楽譜,江戸,文献,充当,牽引,妄想,遷移,瑕疵,惣菜,汐留,真摯,払拭,享受,別荘,本棚,爽快,讃岐,循環,貼付,廃棄,稼働,驚愕,喧騒,奨励,眉間,斎場,遺憾,片隅,壮大,震撼,隙間,逸脱,拒絶,痔疾,甚大,稼動,履行,呆気,衣裳,喪失,玩具,忍者,鳥肌,邁進,探索,怪訝,炸裂,献上,痩身,誹謗,補償,嫉妬,下痢,主宰,懸賞,氾濫,挫折,洒落,中核,拡充,美肌,渾身,高騰,賜物,囲碁,朦朧,謳歌,検診,薔薇,蛇口,麺類,釣果,竜馬,自薦,勃発,初詣,頒布,治癒,編纂,妥協,褒美,隠蔽,競艇,全貌,垣根,淘汰,諸刃,逝去,函館,振袖,浄化,融資,進呈,旦那,按摩,安堵,鞭撻,徘徊,吾輩,余韻,抹茶,捕虜,親戚,附則,愚痴,留袖,窮地,鬱蒼,髣髴,灼眼,刺繍,打診,炎症,化粧,蛇足,片鱗,媒介,昆虫,投函,懲役,奔走,合祀,荒涼,烙印,傘下,捏造,造詣,綾瀬,沙汰,範疇,阿波,吟味,残酷,抹消,剥奪,悠久,消耗,凌駕,清祥,官僚,帰還,欠陥,教鞭,宛名,倫理,風靡,傑作,水槽,便宜,撤回,復讐,陥落,津波,蜘蛛,併合,履修,哀悼,呪文,睡魔,羅列,侮辱,熨斗,偏見,秩序,夕凪,湘南,封筒,料亭,靴下,堆積,廃校,抹殺,献立,廃盤,窃盗,附帯,親睦,只今,菖蒲,固唾,不妊,厄介,菩提,弥生,変遷,疲弊,捜索,還付,懇意,可憐,湿疹,伊那,不倫,庇護,補充,逆鱗,逸品,体臭,辟易,味噌,亀裂,崇拝,頃合,津軽,佃煮,莫大,他薦,融通,黎明,寡聞,麻雀,危惧,献血,動悸,左遷,総括,棲息,罵倒,寛大,恍惚,報酬,呪縛,弦楽,還暦,蹂躙,粉砕,猶予,書斎,覚醒,駐屯,懇談,長靴,出塁,腫瘍,荒廃,憮然,竣工,充填,制覇,乖離,挑発,贔屓,畏敬,刃物,哀愁,発疹,嘔吐,火蓋,逸話,神棚,闊歩,罹患,緋色,不憫,結核,併記,彷徨,困窮,醸成,扶養,芳醇,語弊,天狗,廃墟,愛嬌'.split(',');
const g1_ = '左上,目先,先人,名手,下火,左下,上空,出火,火気,口火,年上,森林,中小,人手,学年,天文,口車,下町,糸目,王手,大気,立木,出生,水虫,文人,大空,目上'.split(',');
const g2_ = '牛肉,年間,気心,風上,昼間,方角,野鳥,通算,知見,国道,入園,月数,中京,本数,文明,土工,南北,弱点,夜間,山道,大台,細工,足場,歩道,少子,火星,活魚,明細,首長,里親,作中,肉体,雨雲,語学,山海,金星,山行,弱気,強大,心中,元手,父母,口数,同校,何人,点字,白地,細道,道楽,出馬,行楽,大雪,教科,新店,太字,線上,合同,新語,交点,文頭,来校,小首,子分,王道,手引,買上,生体,同市,手形,母子,外字,中東,新春,頭角,少数,車内,力強,京王,車道,今風,汽車,学長,文体,門出,校長,後学,半日,村長,食道,室長,親元,公算'.split(',');
const g3_ = '落語,緑色,祭日,下宿,発赤,血相,出向,主文,用命,薬用,回想,薬草,知育,西部,医薬,受章,球場,区画,発火,屋台,先代,後期,着想,決死,同化,新宮,品番,味見,発進,死角,配分,指先,緑茶,分配,古都,入港,自他,予習,先物,有様,鼻水,昔話,着工,重用,次代,行進,祭神,出世,中世,歩調,庭園,悪運,線路,他方,羽根,同定,海岸,発着,平等,庭木,入部,死神,電流,金員,暗号,寒空,使役,家路,曲目,親族,屋内,東洋,首都,安住,書庫,出血,発車,定期,死人,実習,路地,談話,時流,期日,調教,薬指,転写,急落,生死,生身,洋風,歯肉,銀色,用具,面会,医科,育毛,定住,天命,対岸,植林,日銀,苦虫,仕草,植毛,薬店,重体,世相,有数,局面,発出,洋室,他国,丁度,夏期,転記,中庭,入庫,飲茶,着地,商店,西洋,放火,遊学,農村,階数,名勝,箱根,全農,運気,和歌,整地,商号,目深,湯島,役所,急所,丁重,出鼻,動転,農地,身元,美空,発光,美食,湯船,横顔,大化,水橋,温湯,流水,乗客,苦心,弱者,登用,列記,明暗,品名,美男,申立,童心,神主,美化,進言,乗用,空路'.split(',');
const g4_ = '連中,人参,満車,民法,害虫,公約,信教,各駅,関知,着陸,反戦,産声,阪急,試作,高卒,順次,光栄,軽量,初耳,公的,治安,大輪,短信,礼節,建国,実印,労力,方位,器材,司法,積雪,主観,白衣,機運,空席,試練,産出,集成,無礼,民家,機材,祝辞,発熱,無用,線香,英文,無休,公然,包帯,家臣,下関,極力,同省,説教,道標,大臣,別表,季語,選別,器具,未見,対極,低温,着信,菜月,必定,衣服,熱唱,特例,奈落,敗戦,定説,勝敗,最期,急変,末日,連帯,転機,熱湯,民話,梅宮,果実,大鹿,法案,産直,号泣,岐路,世帯,選考,観月,滋養,新芽,山菜,無残,筆順,首席,辞表,欠席,有害,清流,利口,例会,初物,必着,別紙,月給,国連,伝来,街角,例文,浴用,借景,良貨,兆候,冬季,置物,愛国,白熱,挙手,両側,城主,外伝,時差,参道,塩分,城本,下位,通説,前節,良心,白菜,不通,浴場,手塩,悲願,今季,冷水,血管,平静,主夫,民度,類語,気功,無力,希求,要所,木材,力量,国旗,特売,花輪,各校,法要,縄文,大陸,法相,未練,人民,失意,初級,底力,養生,決戦,満員,残金,車輪,共産,官位,英字,続投,月末,軍隊,熱愛,改悪,試乗'.split(',');
const g5_ = '安易,規格,断固,調製,高価,輸送,本領,加護,増強,血圧,燃料,性的,役務,型番,東証,機構,血眼,着任,破格,造園,精査,技法,体得,反故,文責,労務,同義,接着,報知,係留,国営,貧血,均整,均等,特技,築地,演説,富士,質素,天職,学歴,暴言,祖母,雑費,国政,好演,広義,逆説,発布,残留,資材,紀行,本能,団長,全容,木造,欠損,上告,査読,増減,格差,構図,祖父,永住,政界,毛布,基地,軽快,解答,快方,小型,果報,銀河,品性,備品,武力,弁明,入団,増額,形容,常用,大志,均一,要職,旧型,再燃,再興,不評,仏像,過信,用件,支社,複合,別条,上程,禁断,増水,自衛,防人,判示,送検,花粉,平易,格言,損益,減量,雑記,適職,公職,祖国,義理,雑感,価額,燃費,修整,製本,航行,得点,略歴,過大,護衛,仮名,輸血,夜桜,非業,食費,断行,個数,短編,保身,雑草,在日,同士,益金,編曲,複眼,境地,同額,後編,情景,故人,現物,住居,寄席,実演,兵士,増長,市制,旧法,率先,採算,会務,好適,事象,復習,常設,長居,転移,実益,河童,財団,観賞,墓所,税別,設営,画質,木製,全編,良識,眼前,厚意,県政,代謝,陽性,不能,開基,再選,酸化,条約,元祖,安政,体型,肥料,情勢,本性,有志,毒殺,体格,世紀,慣例,理容,義歯,老眼,薬効,主義,本編,引率,心情,賛美,公営,属国,功罪,人脈,別居,病態,前編,文脈,在留,支局,衛星,改編,本堂,国益'.split(',');
const g6_ = '退室,聖地,在勤,綿密,貴様,和装,納車,運賃,体操,難関,尊厳,反乱,宗派,卵巣,納戸,寸断,内臓,熟読,批評,論議,胃腸,悲劇,下巻,補正,秘宝,徒党,無論,持論,変革,完訳,拡散,操業,日勤,難民,口論,接収,閉幕,字幕,国権,返納,収縮,冊数,私鉄,裏手,大洗,預金,温存,退散,吸着,石段,領収,観劇,補修,完熟,産卵,深層,成就,水源,源氏,枚数,額装,完納,物欲,簡易,穴場,降臨,異例,欠片,都庁,別冊,断腸,体裁,机上,秘策,通訳,腹筋,正座,推挙,動詞,洗面,未熟,実寸,裏腹,視角,神聖,視覚,府警,遺骨,特権,表装,敬愛,激変,密生,鉄鋼,敵視,晩年,皇国,裏話,裏面,遺書,異様,中段,採寸,沿革,今晩,片棒,収束,論点,脳死,若気,歌劇,親密,書誌,諸税,同庁,在宅,共著,誤植,政党,翌月,和訳,推理,創始,名詞,憲昭,上値,食券,頂門,翌朝,株数,私財,後姿,特段,火傷,黄泉,背水,宝物,分担,降板,劇評,拝命,奏者,武将,正論,土俵,野党,乱暴,追従,苦難,痛切,骨太,遺作,敬語,操縦,道筋,災難,目盛,胸元'.split(',');
const g7_ = '異彩,上越,威信,傍点,後継,鮮度,傾斜,敷居,調剤,南端,押切,撃沈,立脚,震度,屋敷,余暇,跡地,旨味,山陰,巨万,採掘,偉業,佐渡,皮脂,丹波,鉄腕,不詳,倒壊,光沢,骨盤,盗難,主旨,落雷,弾圧,殿堂,包含,海鮮,撃退,波及,狭間,吐露,振出,縁日,途端,漁獲,与党,後援,要旨,起床,追撃,疑惑,飛躍,不慮,扇子,爆破,絶叫,物陰,即位,御用,右端,罰則,不眠,平凡,称賛,離脱,桜桃,耐熱,反響,人影,騒音,越中,即行,野郎,軽微,脱税,浸食,即答,捕食,尾道,惑星,誤爆,御宿,全幅,繁茂,婚約,休暇,花環,脱帽,彩色,脱皮,中盤,旧跡,攻防,恋心,権威,爆弾,跡形,早寝,神妙,英雄,寝顔,療養,鼓舞,手狭,貯蓄,逃亡,難儀,巨大,登載,腐心,汚名,遠征,告訴,北端,右腕,城壁,眠気,隠居,煮干,越冬,風俗,民謡,会釈,本舗,東端,事柄,我輩,賞与,丹精,汚物,快眠,西端,屈服,供与,耐震,因縁,模範,鉄砲,忘却,丹後'.split(',');
const g8_ = '放浪,登壇,主軸,魅惑,伏線,克明,委嘱,隔世,生憎,粘膜,解凍,埋設,超過,勧請,強奪,起伏,嘱望,孤高,魔王,肝臓,手袋,降伏,孤独,浪費,満悦,墜落,暫定,陰謀,抑留,郊外,安穏,焼豚,戸籍,昇給,誘致,真髄,師匠,冷房,緊迫,残虐,陳謝,欠乏,破裂,翻案,花婿,喫煙,奇怪,勘定,聴衆,拝聴,擁立,結託,苗木,甲府,論壇,双月,変哲,信奉,家畜,搾取,死霊,結晶,共催,姫路,落胆,湿度,心酔,粗大,掲記,漂着,摂理,修繕,帝王,不穏,潤沢,横綱,破滅,雪崩,慈愛,債券,開封,帝国,屈託,魔力,読了,純粋,埋蔵,憂慮,鶏肉,天寿,必携,湾岸,急募,硬化,本籍,孤島,文殊,小房,清聴,浪人,虚無,句碑,企図,木霊'.split(',');
const g9_ = '剪定,壮絶,訃報,挿絵,献金,怒涛,寵愛,瀕死,釣具,億劫,偽装,蒼穹,懸命,聯合,家督,斬新,酷評,末裔,核心,秀逸,搭乗,洞窟,琴線,拮抗,腎臓,繊維,暖簾,撤廃,病棟,日傘,統括,眉根,喘息,黄昏,進捗,麻布,疎遠,洗浄,閃光,股間,同棲,痙攣,溺愛,併発,須坂,真珠,繊細,釧路,川柳,妖怪,下賜,約款,錯綜,懇願,排泄,招聘,憑依,光芒,空洞,干渉,糾弾,均衡,自粛,薫陶,褒貶,改竄,牽制,厨房,漆黒,絨毯,姻族,土壌,嗚呼,天秤,憤慨,安泰,庶民,駆逐,小樽,蚊帳,重症,小脇,捻出,濡肌,泥棒,症例,葛藤,洪水,躁鬱,蒼天,索引,昆布,雲仙,終焉,沼津,脱糞,密栓,翡翠,此処,転訛,入塾,巣窟,癒着,壮観,浴槽,駒野,咆哮,任侠,逼迫,宛先,砂漠,元旦,竜宮,初診,只者,情緒,拉麺,鷹山,迂回,果汁,亜鉛,稀少,嗜好,祇園,頬杖,頻出,懸案,珠玉,追悼,麻疹,喧伝,酷使,寄附,魍魎,颯爽,悠長,語彙,漬物,崇敬,尻尾,長閑,厳粛,盲点,有償,遍路,高嶺,過疎,派閥,臆病,述懐,異臭,反芻,煎茶,上梓,犬猿,萎縮,仙人,支那,歯牙,喪主,軽蔑,後塵,弘前,忌憚,覇者,水筒,罷免,溌剌,猫背,凄惨,爆睡,筑紫,償却,威嚇,会津,跋扈,勃起,幸甚,杣人,弊誌,裕福,生還,山荘,湧出,渦中,枕元,斬首';
const i1 = i1_;
const i2 = i2_.concat(i1);
const i3 = i3_.concat(i2);
const i4 = i4_.concat(i3);
const i5 = i5_.concat(i4);
const i6 = i6_.concat(i5);
const i7 = i7_.concat(i6);
const i8 = i8_.concat(i7);
const i9 = i9_.concat(i8);
const w1 = w1_;
const w2 = w2_.concat(w1);
const w3 = w3_.concat(w2);
const w4 = w4_.concat(w3);
const w5 = w5_.concat(w4);
const w6 = w6_.concat(w5);
const w7 = w7_.concat(w6);
const w8 = w8_.concat(w7);
const idiomsList  = [i1, i1, i2, i3, i4, i5, i6, i7, i8, i9];
const ignoresList = [g1, g1, g2, g3, g4, g5, g6, g7, g8, g9];
const wordsList   = [w1, w1, w2, w3, w4, w5, w6, w7, w8, w8];
let size = 10;
let meiro = new Array(12);
let score = 0;
let counter = 0;
let processed;
let idioms = i4;
let ignores = g4;
let words  = w4;
let level = 4;

function loadConfig() {
  if (localStorage.getItem('darkMode') == 1) {
    document.documentElement.dataset.theme = 'dark';
  }
}
loadConfig();

function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min)) + min;
}

function shuffle(array) {
  for (let i = array.length - 1; i >= 0; i--) {
    let rand = Math.floor(Math.random() * (i + 1));
    [array[i], array[rand]] = [array[rand], array[i]]
  }
  return array;
}

function calcReply() {
  var reply = new Array(size * size);
  var trs = document.getElementById('meiro').children;
  for (var x=0; x<size; x++) {
    var tds = trs[x].children;
    for (var y=0; y<size; y++) {
      var selected = tds[y].classList.contains('table-primary');
      var hinted = tds[y].classList.contains('table-secondary');
      var pos = meiro[x][y];
      if (pos > 0 && (selected || hinted)) {
        reply[pos-1] = tds[y].innerText;
      }
    }
  }
  return reply;
}

function findMeiroIndex(n) {
  for (var x=0; x<size; x++) {
    for (var y=0; y<size; y++) {
      if (meiro[x][y] == n) {
        return x * size + y;
      }
    }
  }
  return -1;
}

function prependIdiomLink(idiom, correct) {
  var a = document.createElement('a');
  a.innerText = idiom;
  a.href = 'https://www.google.com/search?q=' + idiom + 'とは';
  a.target = '_blank';
  a.rel = 'noopener noreferer';
  if (correct) {
    a.className = 'btn btn-light m-1';
  } else {
    a.className = 'btn btn-secondary m-1';
  }
  solvedPanel.prepend(a);
}

function showSolved(reply, hinted) {
  var solvedPanel = document.getElementById('solvedPanel');
  var trs = document.getElementById('meiro').children;
  var j = 0;  var k = 0;
  for (var i=0; i<counter; i++) {
    var idiom = idioms[j];
    if (!processed[i]) {
      if (reply[i] == idiom[k]) {
        if (k == idiom.length - 1) {
          prependIdiomLink(idiom, true);
          score += idiom.length;
          document.getElementById('score').innerText = score;
        }
        processed[i] = true;
      } else {
        prependIdiomLink(idiom, false);
        var pos = i - k;
        for (var l = pos; l < pos + idiom.length; l++) {
          processed[l] = true;
          var idx = findMeiroIndex(l+1);
          var td = trs[Math.floor(idx / size)].children[idx % size];
          td.className = '';
          td.classList.add('table-secondary');
        }
        if (hinted) {
          break;
        }
      }
    }
    if (k == idiom.length - 1) {
      j += 1;  k = 0;
    } else {
      k += 1;
    }
  }
}

function showHint(reply) {
  var reply = calcReply();
  showSolved(reply, true);
}

function showAnswer() {
  var reply = calcReply();
  showSolved(reply, false);
  var trs = document.getElementById('meiro').children;
  for (var x=0; x<size; x++) {
    var tds = trs[x].children;
    for (var y=0; y<size; y++) {
      if (meiro[x][y] > 0) {
        tds[y].className = '';
        tds[y].classList.add('table-danger');
      }
    }
  }
  var startButton = document.getElementById('startButton');
  startButton.classList.remove('d-none');
  startButton.innerText = 'スタート';
  var answerButton = document.getElementById('answerButton');
  answerButton.classList.add('d-none');
}

function getNeighborText(trs, x, y, direction) {
  var text = trs[x].children[y].innerText;
  if (direction == 1) {
    if (meiro[x-1][y] != 0) {
      text += trs[x-1].children[y].innerText;
    }
  } else if (direction == 2) {
    if (meiro[x+1][y] != 0) {
      text += trs[x+1].children[y].innerText;
    }
  } else if (direction == 3) {
    if (meiro[x][y-1] != 0) {
      text += trs[x].children[y-1].innerText;
    }
  } else {
    if (meiro[x][y+1] != 0) {
      text += trs[x].children[y+1].innerText;
    }
  }
  return text;
}

function setNeighborText(trs, x, y, direction, text, isAnswer) {
  if (!isAnswer) {
    trs[x].children[y].innerText = text[0];
  }
  if (direction == 1) {
    trs[x-1].children[y].innerText = text[1];
  } else if (direction == 2) {
    trs[x+1].children[y].innerText = text[1];
  } else if (direction == 3) {
    trs[x].children[y-1].innerText = text[1];
  } else {
    trs[x].children[y+1].innerText = text[1];
  }
}

function generateRandomText(text, isAnswer) {
  if (isAnswer) {
    var first = text[0];
    for (var i=0; i<5; i++) {  // どうしても熟語ができてしまうケースがあるため回数打ち切り
      text = first + words[getRandomInt(0, words.length)];
      if (!includeIdiom(text)) { return text; }
    }
  } else {
    for (var i=0; i<5; i++) {  // どうしても熟語ができてしまうケースがあるため回数打ち切り
      for (var j=0; j<2; j++) {
        text[j] = words[getRandomInt(0, words.length)];
      }
      if (!includeIdiom(text)) { return text; }
    }
  }
  return text;
}

function includeIdiom(text) {
  if (idioms.includes(text.slice(0, 2)) && ignores.includes(text.slice(0, 2))) {
    return true;
  } else {
    return false;
  }
}

function strictNeighbor(trs, x, y, direction, isAnswer) {
  var text = getNeighborText(trs, x, y, direction);
  if (text.length == 2) {  // 解答ノードを含まない時
    text = generateRandomText(text, isAnswer);
    setNeighborText(trs, x, y, direction, text, isAnswer);
  }
}

function strictSolution() {
  var trs = document.getElementById('meiro').children;
  for (var x=0; x<size; x++) {
    for (var y=0; y<size; y++) {
      if (meiro[x][y] == 0) {
        // 解答ノード以外は隣接ニ文字だけ見て熟語ができないようにする
        if (0 <= x-1) {
          strictNeighbor(trs, x, y, 1, false);
        }
        if (x+1 < size) {
          strictNeighbor(trs, x, y, 2, false);
        }
        if (0 <= y-1) {
          strictNeighbor(trs, x, y, 3, false);
        }
        if (y+1 < size) {
          strictNeighbor(trs, x, y, 4, false);
        }
      } else {
        // 解答ノードは別解ができないようにする
        var routes = getNeighborRoutes(x, y);
        for (var j=0; j<routes.length; j++) {
          strictNeighbor(trs, x, y, routes[j][2], true);
        }
      }
    }
  }
}

function startGame() {
  while (solvedPanel.firstChild) { solvedPanel.removeChild(solvedPanel.firstChild); }
  generateGame();
  strictSolution();
  var startButton = document.getElementById('startButton');
  startButton.classList.add('d-none');
  startButton.innerText = 'やり直し';
  var answerButton = document.getElementById('answerButton');
  answerButton.classList.remove('d-none');
}

function isPassableRoute(x, y, routes) {
  if (routes.length == 4) {
    return true;
  } else if (routes.length == 3) {
    if (x == 0 || x == size -1 || y == 0 || y == size -1) {
      return true;
    }
  }
  return false;
}

function isPassableNeighbor(x, y, routes) {
  if (routes.length >= 3) {
    return true;
  } else if (routes.length == 2) {
    if (x == 0 || x == size -1 || y == 0 || y == size -1) {
      return true;
    }
  }
  return false;
}

function getRoute(x, y, direction, n) {
  var directions = shuffle([1, 2, 3, 4]);
  var tmpRoutes = getNeighborRoutes(x, y);
  if (!isPassableNeighbor(x, y, tmpRoutes)) {
    return false;
  }

  for (var d=0; d<directions.length; d++) {
    if (directions[d] == 1 && 0 <= x-n && direction != 2) {
      var passable = true;
      for (var i=1; i<=n; i++) {
        tmpRoutes = getNeighborRoutes(x-i, y);
        if (!isPassableRoute(x-i, y, tmpRoutes)) {
          passable = false;
          break;
        }
      }
      if (passable) { return [x-1, y, 1]; }
    }
    if (directions[d] == 2 && x+n < size && direction != 1) {
      var passable = true;
      for (var i=1; i<=n; i++) {
        tmpRoutes = getNeighborRoutes(x+i, y);
        if (!isPassableRoute(x+i, y, tmpRoutes)) {
          passable = false;
          break;
        }
      }
      if (passable) { return [x+1, y, 2]; }
    }
    if (directions[d] == 3 && 0 <= y-n && direction != 4) {
      var passable = true;
      for (var i=1; i<=n; i++) {
        tmpRoutes = getNeighborRoutes(x, y-i);
        if (!isPassableRoute(x, y-i, tmpRoutes)) {
          passable = false;
          break;
        }
      }
      if (passable) { return [x, y-1, 3]; }
    }
    if (directions[d] == 4 && y+n < size && direction != 3) {
      var passable = true;
      for (var i=1; i<=n; i++) {
        tmpRoutes = getNeighborRoutes(x, y+i);
        if (!isPassableRoute(x, y+i, tmpRoutes)) {
          passable = false;
          break;
        }
      }
      if (passable) { return [x, y+1, 4]; }
    }
  }
  return false;
}

function getNeighborRoutes(x, y) {
  var routes = [];
  if (0 <= x-1 && meiro[x-1][y] == 0) {
    routes.push([x-1, y, 1]);
  }
  if (x+1 < size && meiro[x+1][y] == 0) {
    routes.push([x+1, y, 2]);
  }
  if (0 <= y-1 && meiro[x][y-1] == 0) {
    routes.push([x, y-1, 3]);
  }
  if (y+1 < size && meiro[x][y+1] == 0) {
    routes.push([x, y+1, 4]);
  }
  return routes;
}

function paint(x, y, direction, n) {
  if (direction == 1) {
    for (var i=0; i<n; i++) {
      counter += 1;
      meiro[x-i][y] = counter;
    }
    return [x-n+1, y];
  } else if (direction == 2) {
    for (var i=0; i<n; i++) {
      counter += 1;
      meiro[x+i][y] = counter;
    }
    return [x+n-1, y];
  } else if (direction == 3) {
    for (var i=0; i<n; i++) {
      counter += 1;
      meiro[x][y-i] = counter;
    }
    return [x, y-n+1];
  } else {
    for (var i=0; i<n; i++) {
      counter += 1;
      meiro[x][y+i] = counter;
    }
    return [x, y+n-1];
  }
}

function p() {
  var str = '';
  for (var i=0; i<size; i++) {
    for (var j=0; j<size; j++) {
      str += meiro[i][j];
    }
    str += '\n';
  }
  console.log(str);
}

function generateGame() {
  // 開始地点を選び隣接しないように熟語を埋めていく
  idioms = shuffle(idioms);
  var generating = true;
  while (generating) {
    var x1 = 0;
    var y1 = getRandomInt(1, size-1);
    var painting = true;
    counter = 0;
    for (var x=0; x<size; x++) {
      meiro[x] = new Array(size);
      for (var y=0; y<size; y++) {
        meiro[x][y] = 0;
      }
    }
    var route = getRoute(x1, y1, -1, idioms[0].length);
    var xy = paint(x1, y1, route[2], idioms[0].length);
    x1 = xy[0];
    y1 = xy[1];
    var i = 1;
    while (painting) {
      var firsts = shuffle(getNeighborRoutes(x1, y1));
      if (firsts.length == 0) {
        painting = false;
      } else {
        var noRoute = true;
        for (var j=0; j<firsts.length; j++) {
          route = getRoute(firsts[j][0], firsts[j][1], firsts[j][2], idioms[i].length - 1);
          if (route) {
            noRoute = false;
            paint(firsts[j][0], firsts[j][1], firsts[j][2], 1);
            xy = paint(route[0], route[1], route[2], idioms[i].length - 1);
            x1 = xy[0];
            y1 = xy[1];
            if (x1 == 0 || x1 == size-1 || y1==0 || y1 == size-1) {
              painting = false;
              if (counter > 20) {  // 良い迷路になっている
                generating = false;
                processed = new Array(counter);  // 回答リストのキャッシュを生成
              }
            }
            i += 1;
            break;
          }
        }
        if (noRoute) { painting = false; }
      }
    }
  }
  var meiroNode = document.getElementById('meiro');
  while(meiroNode.firstChild) { meiroNode.removeChild(meiroNode.firstChild); }
  for (var x=0; x<size; x++) {
    var tr = document.createElement('tr');
    meiroNode.appendChild(tr);
    for (var y=0; y<size; y++) {
      var td = document.createElement('td');
      td.innerText = words[getRandomInt(0, words.length)];
      tr.appendChild(td);
      td.onclick = function() {
        this.classList.toggle('table-primary');
      }
    }
  }
  var trs = meiroNode.children;
  var j = 0;  var k = 0;
  for (var i=1; i<=counter; i++) {
    var idx = findMeiroIndex(i);
    var idiom = idioms[j][k];
    var td = trs[Math.floor(idx / size)].children[idx % size];
    td.innerText = idiom;
    if (i == 1) {
      td.classList.add('table-secondary');
    }
    if (k == idioms[j].length - 1) {
      j += 1;  k = 0;
    } else {
      k += 1;
    }
  }
}

function resizeFontSize(node) {
  // https://stackoverflow.com/questions/118241/
  function getTextWidth(text, font) {
      // re-use canvas object for better performance
      // var canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement("canvas"));
      var context = tmpCanvas.getContext("2d");
      context.font = font;
      var metrics = context.measureText(text);
      return metrics.width;
  }
  function getTextRect(text, fontSize, font, lineHeight) {
    var lines = text.split('\n');
    var maxWidth = 0;
    var fontConfig = fontSize + 'px ' + font;
    for (var i=0; i<lines.length; i++) {
      var width = getTextWidth(lines[i], fontConfig);
      if (maxWidth < width) {
        maxWidth = width;
      }
    }
    return [maxWidth, fontSize * lines.length * lineHeight];
  }
  function getNodeRect() {
    var width = document.getElementById('container').clientWidth;
    var headerHeight = document.getElementById('header').clientHeight;
    var startButtonHeight = document.getElementById('startButton').clientHeight;
    var height = document.documentElement.clientHeight - headerHeight - startButtonHeight;
    return [width, height];
  }
  // function getPaddingRect(style) {
  //   var width = parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
  //   var height = parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);
  //   return [width, height];
  // }
  var style = getComputedStyle(node);
  var font = style.fontFamily;
  var fontSize = 16;  // parseFloat(style.fontSize);
  var lineHeight = 1.1;  // parseFloat(style.lineHeight) / fontSize;
  var nodeRect = getNodeRect();
  var textRect = getTextRect('禿', fontSize, font, lineHeight);
  var paddingRect = [remSize * 2 + 21, remSize * 1.5 + 6]; // getPaddingRect(style);

  // https://stackoverflow.com/questions/46653569/
  // Safariで正確な算出ができないので誤差ぶんだけ縮小化 (10%)
  var rowFontSize = fontSize * (nodeRect[0] - paddingRect[0]) / 12 / textRect[0] * 0.90;
  var colFontSize = fontSize * (nodeRect[1] - paddingRect[1]) / 12 / textRect[1] * 0.90;
  if (colFontSize < rowFontSize) {
    node.style.fontSize = colFontSize + 'px';
  } else {
    node.style.fontSize = rowFontSize + 'px';
  }
}

function toggleDarkMode() {
  if (localStorage.getItem('darkMode') == 1) {
    localStorage.setItem('darkMode', 0);
    delete document.documentElement.dataset.theme;
  } else {
    localStorage.setItem('darkMode', 1);
    document.documentElement.dataset.theme = 'dark';
  }
}

var timerText = document.getElementById('meiro');
resizeFontSize(timerText);
window.addEventListener('resize', function() {
  resizeFontSize(timerText);
});
generateGame();
strictSolution();
while (solvedPanel.firstChild) { solvedPanel.removeChild(solvedPanel.firstChild); }
showAnswer();

document.getElementById('levelOption').addEventListener('change', function() {
  idioms = idiomsList[this.selectedIndex];
  ignores = ignoresList[this.selectedIndex];
  words = wordsList[this.selectedIndex];
  startGame();
});
document.getElementById('courseOption').addEventListener('change', function() {
  location.href = this.options[this.selectedIndex].value;
});

